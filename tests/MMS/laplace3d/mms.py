from __future__ import print_function
from builtins import str
from sympy import symbols, cos, sin, tan, exp, log, pi
from boutdata.mms_alternate import *
from sys import exit

global metric

# Define non-trivial metrics
geometry = SimpleTokamak()
#geometry = ShapedTokamak()

# Define manufactured solution in toroidal x, y=theta, z=phi
# (where x is a radial coordinate going from zero to one across our domain)
solution = sin(x*pi)*exp(sin(3*z)) + tan(sin(2*x*pi))*log(2. + sin(z + 1.7))

# Shift solution to field-aligned coordinates
solution = solution.subs(z, z+geometry.zShift)

# Calculate input

input = Delp2(solution)

# Print input file to stdout

print("# Generated by mms.py")
print("")
print("MZ = 32")
print("myg = 1")
print("mxg = 1")
print("")
print("solution = "+exprToStr(solution))
print("input = "+exprToStr(input))
print("")
print("[mesh]")
print("")
print("symmetricGlobalX = true")
print("")
print("nx = 34")
print("ny = (nx-2*mxg)")
print("nz = nx-2*mxg")
print("")
print("Lx = 1.0")
print("")
print("dx = Lx/(nx-2*mxg)")
print("dy = 2*pi*Lx/ny")
print("dz = 2*pi*Lx/mz")
print("")
geometry.print_mesh()
print("")
print("[laplace]")
print("")
print("type = cyclic")
print("flags = 0")

exit(0)
